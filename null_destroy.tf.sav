resource "null_resource" "destroy" {
depends_on = [
  aws_sagemaker_domain.mydomain
]
triggers = {
       always_run = timestamp()
}
provisioner "local-exec" {
    on_failure  = continue
    when    = destroy
    interpreter = ["/bin/bash", "-c"]
    command     = <<EOT
        # oh-oh the outputs have gone
        fsid=$(terraform output home_efs_file_system_id | tr -d '"')
        sgin=$(terraform output sg-sm-inbound | tr -d '"')
        sgout=$(terraform output sg-sm-outbound | tr -d '"')
        fsmt=$(aws efs describe-mount-targets --file-system-id $fsid --query MountTargets[0].MountTargetId | jq . -r)
        echo "attempt cleanup"
        aws efs delete-mount-target --mount-target-id $fsmt
        aws efs delete-file-system --file-system-id $fsid
        sgrid=$(aws ec2 describe-security-group-rules --filters Name=group-id,Values=$sgin --query SecurityGroupRules[0].SecurityGroupRuleId | jq -r )
        aws ec2 revoke-security-group-ingress --group-id $sgin --security-group-rule-ids $sgrid
        aws ec2 delete-security-group --group-id $sgin
        sgrid=$(aws ec2 describe-security-group-rules --filters Name=group-id,Values=$sgout --query SecurityGroupRules[0].SecurityGroupRuleId | jq -r )
        aws ec2 revoke-security-group-ingress --group-id $sgout --security-group-rule-ids $sgrid
        aws ec2 delete-security-group --group-id $sgout
     EOT
}
}